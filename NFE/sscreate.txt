#program sscreate  10 RUN AT 3  20 ; quick and nasty prog to create slideshows from NFE plots  25 ; proof of concept only,  30 ; a better one with a text ui etc will follow ...  40 ;  50 ; limitations :  60 ;  70 ; 1. must be run from the NFE directory  80 ; 2. pt3 files must be in the NFE directory  90 ; 3. max 15 plots in a slideshow 100 ; 4. max 15 palettes too 110 ; 5. no editing features. make a mistake and you have to start again 120 ; 6. just allows selection of plots, palettes, 130 ;    the duration for which each plot is displayed (can be the same for all 140 ;    lots, or be a random value between minimum and maximum values) 150 ; 7. max 5 .pt3 files to play in during a slideshow 155 ; 8. because it is not possible to determine from Nextbasic when a 156 ;   .pt3 has finished, each .pt3 is started after a number of plots 157 ;    have been shown 158 ; Note: each plot in a slidesdhow has a palette associated with it. Currently the slideshow player  159 ; ignores this, and instead loads a random palette from all of those those in mentioned in the slideshow. 160 ; 161 ; This file - sscreaste.bas - is part of Next Fractal Explorer 162 ; Next Fractal Explorer is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 163 ; 164 ; This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. 167 ;You should have received a copy of the GNU General Public License along with this program. If not, see https://www.gnu.org/licenses/ 170 INK 0:maxitems=15: numitems=0: minshow=0: maxshow=0: maxtunes=5: numtunes=0: tuneint=5 180 DIM plot$(maxitems,50) 190 DIM pal$(maxitems,50) 195 DIM pt3$(maxtunes,50) 200 FOR i=1 TO maxtunes 201 CLS : INK 0: PRINT AT 2,1; "<space> to select music file ";i;" of ";maxtunes 202 PRINT : PRINT " or ""n"" to start selecting plots" 220 PROC WaitKeyRelease() 230 REPEAT : PROC GetKeyPress() TO k$: PROC UppercaseChar(k$) TO k$: 240 REPEAT UNTIL k$=" " OR k$="N" 245 IF k$="n" OR k$="N" THEN GO TO @gettuneint 250 IF k$= " " THEN  .browse -t "pt3" -f -p "Select music file" newpt3$ 251  numtunes+=1: pt3$(numtunes)=newpt3$   252 NEXT i   253 @gettuneint 254 CLS : PRINT AT 2,1;"How many plots should be shown": PRINT : PRINT "  before changing tunes? (1-9)" 255 REPEAT : INPUT tuneint: REPEAT UNTIL tuneint>0 AND tuneint<10 260 FOR i=1 TO maxitems: 270 CLS  280 PRINT AT 2,1; "<space> to select plot ";i;" of ";maxitems 290 IF i<>1: 300    PRINT : PRINT "     or ""n"" if you're done" 310    INK 1: PRINT AT 18,1;"Last Plot: "; plot$(i-1): PRINT AT 19,1;"Last Pal : ";pal$(i-1): INK 0 320 ENDIF  330 PROC WaitKeyRelease() 340 REPEAT : PROC GetKeyPress() TO k$ : REPEAT UNTIL k$="n" OR k$=" " 350 IF k$="n" OR k$="N" THEN GO TO @getdelays 360 IF k$=" ": 370    CD "plots": .browse -t "mnd" -f -p "Select plot" plotfn$  380    numitems+=1: plot$(numitems)=plotfn$: CD ".."  390 ENDIF  400 PRINT AT 2,1; "press space to select palette ";i;" of ";maxitems 410 PROC WaitKeyRelease() 420 REPEAT : PROC GetKeyPress() TO k$: REPEAT UNTIL k$=" " 430 IF k$=" ": 440    CD "palettes": .browse -t "pal" -f -p "Select palette" palfn$  450    pal$(numitems)=palfn$: CD ".."  460 ENDIF  470 NEXT i 475 @getdelays 480 CLS : PRINT AT 0,0;"Enter the minimum number of" 490 PRINT "seconds that plots will be shown": PRINT "for"   491 PRINT : PRINT INK 2;"Note: must be between 1 and 300s" 500 REPEAT : INPUT minshow: REPEAT UNTIL minshow>0 AND minshow<301: ;max 5mins 510 PRINT : INK 0: PRINT "Now enter the max number of" 520 PRINT "seconds that plots will be shown": PRINT "for" 530 PRINT : PRINT : INK 1: PRINT ;"Note:if the min and max values" 540 PRINT "are the same then each plot": PRINT "will be shown that for that no. of seconds":  550 PRINT : PRINT "If the values differ, each plot" 560 PRINT "will be shown for a random time"  570 PRINT "between the min and max values." 571 INK 0: REPEAT : INPUT maxshow: REPEAT UNTIL maxshow>=minshow AND maxshow<601 572 PROC SaveSS(): STOP  580 DEFPROC SaveSS() 590 ; guess what this does! 600 LOCAL i, k$, s$, o, palrnd, plotrnd,fn$,ps$,yn$,%j   610 CLS : PRINT "  Random order for plots? Y/N"  620 REPEAT :  630 PROC WaitKeyRelease(): PROC GetKeyPress() TO k$ 640 PROC UppercaseChar(k$) TO yn$ : REPEAT UNTIL yn$="Y" OR yn$="N" 650 plotrnd=0 : IF yn$="Y" THEN plotrnd=1 660 PRINT : PRINT "  Random order for pals? Y/N" 670 REPEAT : PROC WaitKeyRelease(): PROC GetKeyPress() TO k$: PROC Uppercasechar(k$) TO yn$: PRINT "kp ";yn$: REPEAT UNTIL yn$="Y" OR yn$="N" 680 palrnd=0: IF yn$="Y" THEN palrnd=1 690 PRINT "Enter slideshow name : ";: INPUT s$          700 IF s$<>"" : 710  ; all settings are saved in a string array 715 prepp=7 : ;num of entries before in the array before the plots and palettes 720 DIM q$(prepp+numitems*2+numtunes,30):q$(1)= STR$ (numitems): q$(2)= STR$ (plotrnd): q$(3)= STR$ (palrnd): q$(4)= STR$ (numtunes): q$(5)= STR$ (minshow): q$(6)= STR$ (maxshow): q$(7)= STR$ (tuneint) 730  ; options are done, now store plots 740 : PRINT INK 1;"Saving..." 750  startpos=prepp: endpos=startpos+numitems 760 FOR i=1 TO numitems: q$(startpos+i)=plot$(i): NEXT i 770  startpos =startpos+numitems: endpos=startpos+numitems 780 FOR i=1 TO numitems: q$(startpos+i)=pal$(i) : NEXT i 781   startpos= startpos+numitems: endpos=startpos+numtunes 782 FOR i=1 TO numtunes: q$(startpos+i)=pt3$(i): NEXT i 790  ; save tunes   791  startypos=startpos+numtunes: endpos=startpos+numtunes 810 FOR i= 1 TO endpos: PRINT q$(i): NEXT i 820 SAVE s$+".ssh" DATA q$() 822 PRINT "press a key" 825 PROC getkeypress(): PROC WaitKeyRelease(): CLS : PRINT INK 4;"Saved." 830 ENDIF  840 ENDPROC  850 DEFPROC WaitKeyRelease() 860 REPEAT : REPEAT UNTIL INKEY$ ="" 870 ENDPROC  880 DEFPROC GetKeyPress() 890 REPEAT : a= CODE INKEY$ : REPEAT UNTIL a>=31 900 key$= INKEY$  910 ENDPROC =key$ 920 DEFPROC UppercaseChar(s$) 930 ; converts the first character of a string to upper case and returns it 940 LOCAL a: a= CODE s$ 950 IF a>=97 AND a<=122 THEN a=a-32 960 ENDPROC = CHR$ (a)9998 SAVE "sscreate.bas"